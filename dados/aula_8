library(dplyr)
library(tidyr)
library(rlang)
library(readxl)
library(stringr)
library(ggplot2)
library(lubridate)

celular_total <- read_excel('data/celular_total.xlsx')
cres_populacional <- read_excel('data/crescimento_populacional.xlsx')
exp_tecnologica <- read_excel('data/exportacao_tecnologica.xlsx')
horas_trab <- read_excel('data/horas_trab_por_semana.xlsx')
industria <- read_excel('data/Industry (p of GDP).xlsx')
pop_urbana <- read_excel('data/porcentagem_pop_urbana.xlsx')

lista_bases <- list(
  celular_total,
  cres_populacional,
  exp_tecnologica,
  horas_trab,
  industria,
  pop_urbana
)

# renomeando a primeira variável 
for(i in 1:length(lista_bases)) {
  names(lista_bases[[i]])[1] <- 'paises'
}

lista_bases[[1]] %>% head()

class(lista_bases[[1]])

# 'derretendo' as colunas 
nomes_indicadores <- c(
  'celular_total',
  'cresc_populacional',
  'exp_tecnologica',
  'horas_trab',
  'industria',
  'pop_urbana'
)
nomes_indicadores <- nomes_indicadores[1]
nomes_indicadores


rlang::`!!`()
for(i in 1:length(lista_bases)) {
  lista_bases[[i]] <- gather(lista_bases[[i]], 
                             key = ano,
                             value = !!nomes_indicadores[i], -paises)
}

for(i in 1:length(lista_bases)) {
  lista_bases[[i]] <- lista_bases[[i]] %>% 
    mutate(ano = as.integer(ano),
           paises = str_to_lower(paises))
}

lista_bases[[1]] %>% head()

tab <- left_join(lista_bases[[2]], lista_bases[[6]])
tab <- left_join(tab, lista_bases[[1]])
tab <- left_join(tab, lista_bases[[5]])
tab <- left_join(tab, lista_bases[[3]])
tab <- left_join(tab, lista_bases[[4]])

data_geo <- read_excel('data/data_geo.xlsx', sheet = 2)

data_geo$name <- data_geo$name %>% 
  str_to_lower()

data_geo <- data_geo %>% 
  rename(paises = name)

tab <- left_join(tab, data_geo, by = "paises")
head(tab)

quatro_regioes <- tab %>% 
  group_by(ano, four_regions) %>% 
  summarise(cresc_populacional = mean(cresc_populacional, na.rm = TRUE),
            pop_urbana = mean(pop_urbana, na.rm = TRUE),
            celular_total = mean(celular_total, na.rm = TRUE),
            industria = mean(industria, na.rm = TRUE),
            exp_tecnologica = mean(exp_tecnologica, na.rm = TRUE),
            horas_trab = mean(horas_trab, na.rm = TRUE)) %>% 
  filter(!is.na(four_regions))

# tab %>% 
#   filter(is.na(geo)) %>% 
#   select(paises) %>% 
#   distinct() %>% 
#   nrow()

head(quatro_regioes)

media_cresc_populacional <- quatro_regioes$cresc_populacional %>% 
  mean(na.rm = TRUE) %>% 
  round(2)

ggplot(data = quatro_regioes,
       aes(x = ano, y = cresc_populacional, color = four_regions))+
  geom_line(size = 1)

# Maior parte da análise de dados é ARRUMAR OS DADOS!

install.packages("ggthemes")
library(ggthemes)
ggplot(data = quatro_regioes,
       aes(x = ano, y = cresc_populacional, color = four_regions))+
  geom_line(size = 2) + theme_fivethirtyeight() 


# plot <- tab %>% 
#   ggplot(mapping = aes(x = pop_urbana, y = log(celular_total), frame = ano)) +
#   geom_point()+
#   geom_text(aes(label = paises)) +
#   theme_excel()
# 
# 
# plotly::ggplotly(plot)
# 
# plotly::addpo
